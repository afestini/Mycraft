#ifndef DEFINES_INCLUDED
#define DEFINES_INCLUDED

#include <map>
#include <string>

#define ITEM_LIST \
		ITEM_ENTRY(AIR, "", 0) \
		ITEM_ENTRY(GRASS, "Grass", 2) \
		ITEM_ENTRY(SAPLING, "", 6) \
		ITEM_ENTRY(WATER, "", 8) \
		ITEM_ENTRY(STILL_WATER, "", 9) \
		ITEM_ENTRY(LAVA, "", 10) \
		ITEM_ENTRY(STILL_LAVA, "", 11) \
		ITEM_ENTRY(WOOD, "Wood", 17) \
		ITEM_ENTRY(LEAVES, "", 18) \
		ITEM_ENTRY(SPONGE, "", 19) \
		ITEM_ENTRY(GLASS, "", 20) \
		ITEM_ENTRY(LAPIS_ORE, "", 21) \
		ITEM_ENTRY(LAPIS_BLOCK, "", 22) \
		ITEM_ENTRY(DISPENSER, "", 23) \
		ITEM_ENTRY(SANDSTONE, "", 24) \
		ITEM_ENTRY(NOTE_BLOCK, "", 25) \
		ITEM_ENTRY(BED_BLOCK, "", 26) \
		ITEM_ENTRY(WOOL, "", 35) \
		ITEM_ENTRY(YELLOW_FLOWER, "", 37) \
		ITEM_ENTRY(RED_ROSE, "", 38) \
		ITEM_ENTRY(BROWN_MUSHROOM, "", 39) \
		ITEM_ENTRY(RED_MUSHROOM, "", 40) \
		ITEM_ENTRY(GOLD_BLOCK, "", 41) \
		ITEM_ENTRY(IRON_BLOCK, "", 42) \
		ITEM_ENTRY(DOUBLE_SLAB, "", 43) \
		ITEM_ENTRY(SLAB, "", 44) \
		ITEM_ENTRY(BRICK_BLOCK, "", 45) \
		ITEM_ENTRY(TNT, "", 46) \
		ITEM_ENTRY(BOOKSHELF, "", 47) \
		ITEM_ENTRY(MOSS_STONE, "", 48) \
		ITEM_ENTRY(OBSIDIAN, "", 49) \
		ITEM_ENTRY(TORCH, "", 50) \
		ITEM_ENTRY(FIRE, "", 51) \
		ITEM_ENTRY(SPAWNER, "", 52) \
		ITEM_ENTRY(WOODEN_STAIRS, "", 53) \
		ITEM_ENTRY(CHEST, "", 54) \
		ITEM_ENTRY(REDSTONE_WIRE, "", 55) \
		ITEM_ENTRY(DIAMOND_ORE, "", 56) \
		ITEM_ENTRY(DIAMOND_BLOCK, "", 57) \
		ITEM_ENTRY(WORKBENCH, "", 58) \
		ITEM_ENTRY(CROPS, "", 59) \
		ITEM_ENTRY(FARMLAND, "", 60) \
		ITEM_ENTRY(FURNACE_OFF, "", 61) \
		ITEM_ENTRY(FURNACE_ON, "", 62) \
		ITEM_ENTRY(SIGN_POST, "", 63) \
		ITEM_ENTRY(WOODEN_DOOR_BLOCK, "", 64) \
		ITEM_ENTRY(LADDER, "", 65) \
		ITEM_ENTRY(RAILS, "", 66) \
		ITEM_ENTRY(COBBLESTONE_STAIRS, "", 67) \
		ITEM_ENTRY(WALL_SIGN, "", 68) \
		ITEM_ENTRY(LEVER, "", 69) \
		ITEM_ENTRY(STONE_PRESSURE_PLATE, "", 70) \
		ITEM_ENTRY(IRON_DOOR_BLOCK, "", 71) \
		ITEM_ENTRY(WOODEN_PRESSURE_PLATE, "", 72) \
		ITEM_ENTRY(REDSTONE_ORE, "", 73) \
		ITEM_ENTRY(GLOWING_REDSTONE_ORE, "", 74) \
		ITEM_ENTRY(REDSTONE_TORCH_OFF, "", 75) \
		ITEM_ENTRY(REDSTONE_TORCH_ON, "", 76) \
		ITEM_ENTRY(STONE_BUTTON, "", 77) \
		ITEM_ENTRY(SNOW, "", 78) \
		ITEM_ENTRY(ICE, "", 79) \
		ITEM_ENTRY(SNOW_BLOCK, "", 80) \
		ITEM_ENTRY(CACTUS, "", 81) \
		ITEM_ENTRY(CLAY_BLOCK, "", 82) \
		ITEM_ENTRY(SUGAR_CANE_BLOCK, "", 83) \
		ITEM_ENTRY(JUKEBOX, "", 84) \
		ITEM_ENTRY(FENCE, "", 85) \
		ITEM_ENTRY(PUMPKIN, "", 86) \
		ITEM_ENTRY(NETHERRACK, "", 87) \
		ITEM_ENTRY(SOUL_SAND, "", 88) \
		ITEM_ENTRY(GLOWSTONE_BLOCK, "", 89) \
		ITEM_ENTRY(PORTAL, "", 90) \
		ITEM_ENTRY(JACK_O_LANTERN, "", 91) \
		ITEM_ENTRY(CAKE_BLOCK, "", 92) \
		ITEM_ENTRY(REDSTONE_REPEATER_OFF, "", 93) \
		ITEM_ENTRY(REDSTONE_REPEATER_ON, "", 94) \
		ITEM_ENTRY(IRON_SHOVEL, "", 256) \
		ITEM_ENTRY(IRON_PICKAXE, "IRON_PICKAXE", 257) \
		ITEM_ENTRY(IRON_AXE, "", 258) \
		ITEM_ENTRY(FLINT_STEEL, "", 259) \
		ITEM_ENTRY(APPLE, "", 260) \
		ITEM_ENTRY(BOW, "", 261) \
		ITEM_ENTRY(ARROW, "", 262) \
		ITEM_ENTRY(COAL, "Coal", 263) \
		ITEM_ENTRY(DIAMOND, "", 264) \
		ITEM_ENTRY(IRON_INGOT, "", 265) \
		ITEM_ENTRY(GOLD_INGOT, "", 266) \
		ITEM_ENTRY(IRON_SWORD, "", 267) \
		ITEM_ENTRY(WOODEN_SWORD, "", 268) \
		ITEM_ENTRY(WOODEN_SHOVEL, "", 269) \
		ITEM_ENTRY(WOODEN_PICKAXE, "WOODEN_PICKAXE", 270) \
		ITEM_ENTRY(WOODEN_AXE, "", 271) \
		ITEM_ENTRY(STONE_SWORD, "", 272) \
		ITEM_ENTRY(STONE_SHOVEL, "", 273) \
		ITEM_ENTRY(STONE_PICKAXE, "STONE_PICKAXE", 274) \
		ITEM_ENTRY(STONE_AXE, "", 275) \
		ITEM_ENTRY(DIAMOND_SWORD, "", 276) \
		ITEM_ENTRY(DIAMOND_SHOVEL, "", 277) \
		ITEM_ENTRY(DIAMOND_PICKAXE, "DIAMOND_PICKAXE", 278) \
		ITEM_ENTRY(DIAMOND_AXE, "", 279) \
		ITEM_ENTRY(STICK, "Stick", 280) \
		ITEM_ENTRY(BOWL, "", 281) \
		ITEM_ENTRY(MUSHROOM_SOUP, "", 282) \
		ITEM_ENTRY(GOLD_SWORD, "", 283) \
		ITEM_ENTRY(GOLD_SHOVEL, "", 284) \
		ITEM_ENTRY(GOLD_PICKAXE, "GOLD_PICKAXE", 285) \
		ITEM_ENTRY(GOLD_AXE, "", 286) \
		ITEM_ENTRY(STRING, "", 287) \
		ITEM_ENTRY(FEATHER, "", 288) \
		ITEM_ENTRY(GUNPOWDER, "", 289) \
		ITEM_ENTRY(WOODEN_HOE, "", 290) \
		ITEM_ENTRY(STONE_HOE, "", 291) \
		ITEM_ENTRY(IRON_HOE, "", 292) \
		ITEM_ENTRY(DIAMOND_HOE, "", 293) \
		ITEM_ENTRY(GOLD_HOE, "", 294) \
		ITEM_ENTRY(SEEDS, "", 295) \
		ITEM_ENTRY(WHEAT, "", 296) \
		ITEM_ENTRY(BREAD, "", 297) \
		ITEM_ENTRY(LEATHER_HELMET, "", 298) \
		ITEM_ENTRY(LEATHER_CHESTPLATE, "", 299) \
		ITEM_ENTRY(LEATHER_LEGGINGS, "", 300) \
		ITEM_ENTRY(LEATHER_BOOTS, "", 301) \
		ITEM_ENTRY(CHAINMAIL_HELMET, "", 302) \
		ITEM_ENTRY(CHAINMAIL_CHESTPLATE, "", 303) \
		ITEM_ENTRY(CHAINMAIL_LEGGINGS, "", 304) \
		ITEM_ENTRY(CHAINMAIL_BOOTS, "", 305) \
		ITEM_ENTRY(IRON_HELMET, "", 306) \
		ITEM_ENTRY(IRON_CHESTPLATE, "", 307) \
		ITEM_ENTRY(IRON_LEGGINGS, "", 308) \
		ITEM_ENTRY(IRON_BOOTS, "", 309) \
		ITEM_ENTRY(DIAMOND_HELMET, "", 310) \
		ITEM_ENTRY(DIAMOND_CHESTPLATE, "", 311) \
		ITEM_ENTRY(DIAMOND_LEGGINGS, "", 312) \
		ITEM_ENTRY(DIAMOND_BOOTS, "", 313) \
		ITEM_ENTRY(GOLD_HELMET, "", 314) \
		ITEM_ENTRY(GOLD_CHESTPLATE, "", 315) \
		ITEM_ENTRY(GOLD_LEGGINGS, "", 316) \
		ITEM_ENTRY(GOLD_BOOTS, "", 317) \
		ITEM_ENTRY(FLINT, "", 318) \
		ITEM_ENTRY(RAW_PORKCHOP, "", 319) \
		ITEM_ENTRY(COOKED_PORKCHOP, "", 320) \
		ITEM_ENTRY(PAINTING, "", 321) \
		ITEM_ENTRY(GOLDEN_APPLE, "", 322) \
		ITEM_ENTRY(SIGN, "", 323) \
		ITEM_ENTRY(WOODEN_DOOR, "", 324) \
		ITEM_ENTRY(BUCKET, "", 325) \
		ITEM_ENTRY(BUCKET_WATER, "", 326) \
		ITEM_ENTRY(BUCKET_LAVA, "", 327) \
		ITEM_ENTRY(MINECART, "", 328) \
		ITEM_ENTRY(SADDLE, "", 329) \
		ITEM_ENTRY(IRON_DOOR, "", 330) \
		ITEM_ENTRY(REDSTONE, "", 331) \
		ITEM_ENTRY(SNOWBALL, "", 332) \
		ITEM_ENTRY(BOAT, "", 333) \
		ITEM_ENTRY(LEATHER, "", 334) \
		ITEM_ENTRY(BUCKET_MILK, "", 335) \
		ITEM_ENTRY(CLAY_BRICK, "", 336) \
		ITEM_ENTRY(CLAY_BALL, "", 337) \
		ITEM_ENTRY(SUGAR_CANE, "", 338) \
		ITEM_ENTRY(PAPER, "", 339) \
		ITEM_ENTRY(BOOK, "", 340) \
		ITEM_ENTRY(SLIMEBALL, "", 341) \
		ITEM_ENTRY(STORAGE_MINECART, "", 342) \
		ITEM_ENTRY(POWERED_MINECART, "", 343) \
		ITEM_ENTRY(EGG, "", 344) \
		ITEM_ENTRY(COMPASS, "", 345) \
		ITEM_ENTRY(FISHING_ROD, "", 346) \
		ITEM_ENTRY(CLOCK, "", 347) \
		ITEM_ENTRY(GLOWSTONE_DUST, "", 348) \
		ITEM_ENTRY(RAW_FISH, "", 349) \
		ITEM_ENTRY(COOKED_FISH, "", 350) \
		ITEM_ENTRY(DYE, "", 351) \
		ITEM_ENTRY(BONE, "", 352) \
		ITEM_ENTRY(SUGAR, "", 353) \
		ITEM_ENTRY(CAKE, "", 354) \
		ITEM_ENTRY(BED, "", 355) \
		ITEM_ENTRY(REDSTONE_REPEATER, "", 356) \
		ITEM_ENTRY(COOKIE, "", 357) \
		ITEM_ENTRY(GOLD_MUSIC_DISC, "", 2256) \
		ITEM_ENTRY(GREEN_MUSIC_DISC, "", 2257)


#define ITEM_ENTRY(name, dispName, value) name = value,

enum ItemType { ITEM_LIST };

#undef ITEM_ENTRY
#define ITEM_ENTRY(name, dispName, value) {dispName, (ItemType)value},

extern std::map<std::string, ItemType> itemNames;

enum ItemCategory { ITEMCAT_NONE };

extern std::map<std::string, ItemCategory> itemCategories;



inline ItemType getItemType(const std::string& name)
{
	std::map<std::string, ItemType>::const_iterator it = itemNames.find(name);
	return (it != itemNames.end()) ? it->second : AIR;
}

inline std::string getItemName(ItemType id)
{
	std::map<std::string, ItemType>::const_iterator it = itemNames.begin();
	while (it != itemNames.end() && it->second != id) ++it;
	return (it != itemNames.end()) ? it->first : "UNKNOWN TYPE";
}

inline ItemCategory getItemCategory(const std::string& category)
{
	std::map<std::string, ItemCategory>::const_iterator it = itemCategories.find(category);
	return (it != itemCategories.end()) ? it->second : ITEMCAT_NONE;
}

inline std::string getItemCategoryName(ItemCategory category)
{
	std::map<std::string, ItemCategory>::const_iterator it = itemCategories.begin();
	while (it != itemCategories.end() && it->second != category) ++it;
	return (it != itemCategories.end()) ? it->first : "UNKNOWN CATEGORY";
}

enum BlockTexture
{
	TEX_GRASS = 0, 
	TEX_ROCK = 1, 
	TEX_DIRT = 2, 
	TEX_GRASS_SIDE = 3, 
	TEX_WOODEN_PLANK = 4,
	TEX_STONE_SLAB = 5,
	TEX_STONE = 6,
	TEX_BRICK = 7,
	TEX_TNT_SIDE = 8,
	TEX_TNT_CRACK = 9,
	TEX_TNT_TOP,
	TEX_WEB,
	TEX_FLOWER_RED,
	TEX_FLOWER_YELLOW,
	TEX_PURPLE,
	TEX_SAPLING,

	TEX_COBBLE_STONE = 16,
	TEX_BEDROCK,
	TEX_SAND,
	TEX_GRAVEL,
	TEX_WOOD_SIDE,
	TEX_WOOD_TOP,
	TEX_METAL,
	TEX_GOLDBARS,
	TEX_SILVERTHINGY,
	TEX_CHEST_TOP,
	TEX_CHEST_SIDE,
	TEX_CHEST_FRONT,
	TEX_MUSHROOM_RED,
	TEX_MUSHROOM_BROWN,
	TEX_FIRE_1,
	TEX_FIRE_2,

	TEX_GOLD_ORE = 32,
	TEX_IRON_ORE,
	TEX_COAL_ORE,
	TEX_SHELF,
	TEX_MOSS_COBBLE_STONE,
	TEX_BLACK_THINGY,
	TEX_BLUE_THINGY = 38,
	TEX_DOUBLE_CHEST_FRONT_LEFT = 41,
	TEX_DOUBLE_CHEST_FRONT_RIGHT,
	TEX_WORKBENCH_TOP,
	TEX_FURNACE_OFF_FRONT,
	TEX_FURNACE_SIDE,
	TEX_DISPENSER_FRONT,
	TEX_FIRE_3,

	TEX_SPONGE = 48,
	TEX_GLASS,
	TEX_DIAMOND_ORE,
	TEX_REDSTONE_ORE,
	TEX_LEAVES_1,
	TEX_LEAVES_2 = 53,
	TEX_DOUBLE_CHEST_REAR_LEFT = 57,
	TEX_DOUBLE_CHEST_REAR_RIGHT,
	TEX_WORKBENCH_SIDE_1,
	TEX_WORKBENCH_SIDE_2,
	TEX_FURNACE_ON_FRONT,
	TEX_FURNACE_TOP,

	TEX_CLOTH = 64,
	TEX_SPAWNER,
	TEX_SNOW,
	TEX_RAIN,
	TEX_SNOW_SIDE,
	TEX_CACTUS_TOP,
	TEX_CACTUS_SIDE,
	TEX_CACTUS_INSIDE,
	TEX_GREY_THINGY,
	TEX_REED,
	TEX_JUKEBOX_SIDE,
	TEX_JUKEBOX_TOP,

	TEX_TORCH_ON = 80,
	TEX_WOODEN_DOOR_TOP,
	TEX_IRON_DOOR_TOP,

	TEX_TORCH_OFF = 96,
	TEX_WOODEN_DOOR_BOTTOM,
	TEX_IRON_DOOR_BOTTOM,

	TEX_TRACK_CURVE = 112,
	TEX_REDWOOD = 116,
	TEX_BIRCH
};

#endif